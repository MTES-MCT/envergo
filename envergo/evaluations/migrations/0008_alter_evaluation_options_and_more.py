# Generated by Django 4.2 on 2023-09-01 09:31

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("evaluations", "0007_remove_evaluation_contact_email_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="evaluation",
            options={"verbose_name": "Avis", "verbose_name_plural": "Avis"},
        ),
        migrations.AlterField(
            model_name="evaluation",
            name="contact_emails",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.EmailField(max_length=254),
                size=None,
                verbose_name="Urbanism department email address(es)",
            ),
        ),
        migrations.AlterField(
            model_name="evaluation",
            name="request",
            field=models.OneToOneField(
                blank=True,
                help_text="Does this regulatory notice answers to an existing request?",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="evaluations.request",
                verbose_name="Demande associ√©e",
            ),
        ),
        migrations.AlterField(
            model_name="request",
            name="contact_emails",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.EmailField(max_length=254),
                blank=True,
                default=list,
                size=None,
                verbose_name="Urbanism department email address(es)",
            ),
        ),
        migrations.CreateModel(
            name="RegulatoryNoticeLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frm", models.EmailField(max_length=254, verbose_name="From")),
                (
                    "to",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.EmailField(max_length=254),
                        size=None,
                        verbose_name="To",
                    ),
                ),
                (
                    "cc",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.EmailField(max_length=254),
                        size=None,
                        verbose_name="Cc",
                    ),
                ),
                (
                    "bcc",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.EmailField(max_length=254),
                        size=None,
                        verbose_name="Bcc",
                    ),
                ),
                ("txt_body", models.CharField(verbose_name="Text body")),
                ("html_body", models.CharField(verbose_name="Html body")),
                ("subject", models.CharField(max_length=1024, verbose_name="Subject")),
                (
                    "sent_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date sent"
                    ),
                ),
                (
                    "moulinette_data",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Moulinette data"
                    ),
                ),
                (
                    "moulinette_result",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Moulinette result"
                    ),
                ),
                (
                    "evaluation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="regulatory_notice_logs",
                        to="evaluations.evaluation",
                        verbose_name="Avis",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Sender",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regulatory notice log",
                "verbose_name_plural": "Regulatory notice logs",
                "ordering": ("-sent_at",),
            },
        ),
    ]
