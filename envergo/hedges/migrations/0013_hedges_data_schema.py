# Generated by Django 4.2.19 on 2025-04-17 06:34

from django.db import migrations
from tqdm import tqdm


def update_hedges_data_json_schema(apps, schema_editor):
    HedgeData = apps.get_model("hedges", "HedgeData")
    qs = HedgeData.objects.filter(data__isnull=False)
    for model in qs:
        if not model.data:
            continue

        for hedge in model.data:
            data = hedge.get("additionalData", {})
            # update attributes for Aisne
            if "mode_destruction" not in data:
                data["mode_destruction"] = "arrachage"
            if "position" not in data:
                data["position"] = (
                    "bord_route"
                    if "proximiteVoirie" in data and data["proximiteVoirie"]
                    else "interchamp"
                )
            # use snake_case instead of camelCase
            map = [
                ("type_haie", "typeHaie"),
                ("vieil_arbre", "vieilArbre"),
                ("sur_parcelle_pac", "surParcellePac"),
                ("proximite_mare", "proximiteMare"),
                ("proximite_point_eau", "proximitePointEau"),
                ("sous_ligne_electrique", "sousLigneElectrique"),
                ("proximite_voirie", "proximiteVoirie"),
                ("connexion_boisement", "connexionBoisement"),
            ]
            for snake, camel in map:
                if camel in data:
                    data[snake] = data[camel]
                    del data[camel]
            hedge["additionalData"] = data

            model.save()


class Migration(migrations.Migration):

    dependencies = [
        ("hedges", "0012_update_reptiles"),
    ]

    operations = [
        migrations.RunPython(update_hedges_data_json_schema, migrations.RunPython.noop),
    ]
