# Generated by Django 4.2 on 2023-04-17 13:53

from django.db import migrations, models
import django.db.models.deletion
import envergo.moulinette.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("geodata", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Perimeter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="Name")),
                (
                    "criterion",
                    envergo.moulinette.fields.CriterionChoiceField(
                        choices=[
                            (
                                "envergo.moulinette.regulations.evalenv.Emprise",
                                "Éval Env > Emprise",
                            ),
                            (
                                "envergo.moulinette.regulations.evalenv.SurfacePlancher",
                                "Éval Env > Surface Plancher",
                            ),
                            (
                                "envergo.moulinette.regulations.evalenv.TerrainAssiette",
                                "Éval Env > Terrain d'assiette",
                            ),
                            (
                                "envergo.moulinette.regulations.evalenv.ClauseFilet",
                                "Éval Env > Clause Filet",
                            ),
                            (
                                "envergo.moulinette.regulations.evalenv.OtherCriteria",
                                "Éval Env > Autres rubriques",
                            ),
                            (
                                "envergo.moulinette.regulations.loisurleau.ZoneHumide",
                                "Loi sur l'eau > Zone humide",
                            ),
                            (
                                "envergo.moulinette.regulations.loisurleau.ZoneInondable",
                                "Loi sur l'eau > Zone inondable",
                            ),
                            (
                                "envergo.moulinette.regulations.loisurleau.Ruissellement",
                                "Loi sur l'eau > Ruissellement",
                            ),
                            (
                                "envergo.moulinette.regulations.loisurleau.OtherCriteria",
                                "Loi sur l'eau > Autres rubriques",
                            ),
                            (
                                "envergo.moulinette.regulations.loisurleau.ZoneHumideVieJaunay85",
                                "Loi sur l'eau > 85 - Zone humide Vie & Jaunay",
                            ),
                            (
                                "envergo.moulinette.regulations.natura2000.ZoneHumide44",
                                "Natura 2000 > 44 - Zone humide",
                            ),
                            (
                                "envergo.moulinette.regulations.natura2000.ZoneInondable44",
                                "Natura 2000 > 44 - Zone inondable",
                            ),
                            (
                                "envergo.moulinette.regulations.natura2000.IOTA",
                                "Natura 2000 > IOTA",
                            ),
                            (
                                "envergo.moulinette.regulations.natura2000.Lotissement44",
                                "Natura 2000 > 44 - Lotissement (obsolète)",
                            ),
                            (
                                "envergo.moulinette.regulations.natura2000.Lotissement",
                                "Natura 2000 > Lotissement",
                            ),
                        ],
                        verbose_name="Criterion",
                    ),
                ),
                (
                    "activation_distance",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Activation distance"
                    ),
                ),
                (
                    "map",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="perimeters",
                        to="geodata.map",
                        verbose_name="Map",
                    ),
                ),
            ],
            options={
                "verbose_name": "Perimeter",
                "verbose_name_plural": "Perimeters",
            },
        ),
        migrations.CreateModel(
            name="MoulinetteConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_activated",
                    models.BooleanField(
                        default=False,
                        help_text="Is the moulinette available for this department?",
                        verbose_name="Is activated",
                    ),
                ),
                (
                    "lse_contact_ddtm",
                    models.TextField(verbose_name="LSE > Contact DDTM"),
                ),
                (
                    "n2000_contact_ddtm_info",
                    models.TextField(verbose_name="N2000 > Contact DDTM info"),
                ),
                (
                    "n2000_contact_ddtm_instruction",
                    models.TextField(verbose_name="N2000 > Contact DDTM instruction"),
                ),
                (
                    "n2000_procedure_ein",
                    models.TextField(verbose_name="N2000 > Procédure EIN"),
                ),
                (
                    "n2000_lotissement_proximite",
                    models.TextField(
                        blank=True, verbose_name="N2000 > Précision proximité immédiate"
                    ),
                ),
                (
                    "evalenv_procedure_casparcas",
                    models.TextField(verbose_name="EvalEnv > Procédure cas par cas"),
                ),
                (
                    "criteria_values",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Valeurs des critères",
                    ),
                ),
                (
                    "department",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="moulinette_config",
                        to="geodata.department",
                        verbose_name="Department",
                    ),
                ),
            ],
            options={
                "verbose_name": "Moulinette config",
                "verbose_name_plural": "Moulinette configs",
            },
        ),
    ]
